@extends('layouts.app')

@section('title', 'Tanggal Ulang Tahun')

@section('content')
<div class="min-h-screen flex items-center justify-center relative z-10 py-8">
    <div class="max-w-4xl mx-auto text-center px-6">
        <!-- Header -->
        <div id="header" class="mb-12">
            <h1 class="text-4xl font-bold text-gray-800 mb-4 korean-font glow">
                üìÖ Tanggal berapa ulang tahunmu? üìÖ
            </h1>
            <p class="text-lg text-gray-600">
                Pilih tanggal lahirmu di kalender cantik ini! ‚ú®
            </p>
        </div>

        <!-- Calendar Grid -->
        <div id="calendarGrid" class="bg-white/80 backdrop-blur-sm rounded-3xl p-8 shadow-2xl border border-pink-100 max-w-3xl mx-auto">
            <div class="grid grid-cols-6 gap-4" id="dateGrid">
                <!-- Dates will be generated by JavaScript -->
            </div>
        </div>

        <!-- Selected date display -->
        <div id="selectedDate" class="mt-8 opacity-0">
            <p class="text-xl text-pink-600 font-semibold">
                Tanggal yang dipilih: <span id="selectedNumber" class="text-2xl">?</span>
            </p>
            <button id="confirmBtn" class="mt-4 bg-gradient-to-r from-pink-400 to-rose-400 hover:from-pink-500 hover:to-rose-500 text-white px-8 py-3 rounded-full text-lg font-semibold shadow-lg transition-all duration-300 transform hover:scale-105">
                ÌôïÏù∏! (Konfirmasi)
            </button>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initial animations
    gsap.fromTo("#header", 
        { opacity: 0, y: -50 },
        { opacity: 1, y: 0, duration: 1, ease: "bounce.out" }
    );

    gsap.fromTo("#calendarGrid", 
        { opacity: 0, scale: 0.8 },
        { opacity: 1, scale: 1, duration: 1, ease: "back.out(1.7)", delay: 0.3 }
    );

    const dateGrid = document.getElementById('dateGrid');
    const selectedDate = document.getElementById('selectedDate');
    const selectedNumber = document.getElementById('selectedNumber');
    const confirmBtn = document.getElementById('confirmBtn');
    
    let currentSelected = null;

    // Generate calendar dates (1-30)
    for (let i = 1; i <= 30; i++) {
        const dateBtn = document.createElement('button');
        dateBtn.className = 'date-button bg-gradient-to-br from-pink-50 to-purple-50 border-2 border-pink-200 rounded-2xl h-16 flex items-center justify-center text-xl font-bold text-gray-700 transition-all duration-300 relative overflow-hidden hover:shadow-lg group';
        dateBtn.textContent = i;
        dateBtn.dataset.date = i;
        
        // Tambah ripple effect element
        const ripple = document.createElement('div');
        ripple.className = 'absolute inset-0 rounded-2xl bg-gradient-to-r from-pink-400 to-rose-400 opacity-0 transition-opacity duration-300';
        dateBtn.appendChild(ripple);
        
        // Tambah sparkle elements
        for (let j = 0; j < 3; j++) {
            const sparkle = document.createElement('div');
            sparkle.className = 'absolute w-1 h-1 bg-white rounded-full opacity-0';
            sparkle.style.left = Math.random() * 100 + '%';
            sparkle.style.top = Math.random() * 100 + '%';
            dateBtn.appendChild(sparkle);
        }
        
        // Hover effects
        dateBtn.addEventListener('mouseenter', function() {
            // Hanya animate jika bukan button yang sedang selected
            if (this !== currentSelected) {
                gsap.to(this, {
                    scale: 1.12,
                    boxShadow: "0 15px 40px rgba(236, 72, 153, 0.4)",
                    duration: 0.25,
                    ease: "back.out(2)"
                });
                
                // Ripple effect
                const rippleEl = this.querySelector('div');
                gsap.to(rippleEl, {
                    opacity: 0.1,
                    duration: 0.3
                });
                
                // Sparkle animation
                const sparkles = this.querySelectorAll('.bg-white');
                sparkles.forEach((sparkle, index) => {
                    gsap.to(sparkle, {
                        opacity: 1,
                        scale: Math.random() * 2 + 1,
                        duration: 0.3,
                        delay: index * 0.1,
                        yoyo: true,
                        repeat: 1
                    });
                });
                
                // Vibration simulation untuk mobile
                if (navigator.vibrate) {
                    navigator.vibrate(50);
                }
                
                // Border glow animation
                gsap.to(this, {
                    borderColor: "#ec4899",
                    duration: 0.3
                });
            }
        });
        
        dateBtn.addEventListener('mouseleave', function() {
            // Reset hanya jika bukan button yang sedang selected
            if (this !== currentSelected) {
                gsap.to(this, {
                    scale: 1,
                    boxShadow: "0 0 0 rgba(236, 72, 153, 0)",
                    borderColor: "#f8bbd9",
                    duration: 0.3
                });
                
                // Reset ripple
                const rippleEl = this.querySelector('div');
                gsap.to(rippleEl, {
                    opacity: 0,
                    duration: 0.3
                });
            }
        });
        
        // FUNGSI UTAMA UNTUK MEMILIH TANGGAL
        function selectDate(button) {
            // Haptic feedback
            if (navigator.vibrate) {
                navigator.vibrate([100, 50, 100]);
            }
            
            // RESET SEMUA BUTTON KE STATE DEFAULT DULU
            document.querySelectorAll('.date-button').forEach(btn => {
                // Hapus semua class selected dan styling
                btn.classList.remove('selected');
                btn.classList.remove('bg-gradient-to-br', 'from-pink-400', 'to-rose-400', 'text-white');
                btn.classList.add('bg-gradient-to-br', 'from-pink-50', 'to-purple-50', 'text-gray-700');
                
                // Reset transform dan shadow
                gsap.set(btn, {
                    scale: 1,
                    boxShadow: "0 0 0 rgba(236, 72, 153, 0)"
                });
            });
            
            // SET BUTTON YANG DIPILIH
            currentSelected = button;
            
            // Hapus class default dan tambah class selected
            button.classList.remove('bg-gradient-to-br', 'from-pink-50', 'to-purple-50', 'text-gray-700');
            button.classList.add('bg-gradient-to-br', 'from-pink-400', 'to-rose-400', 'text-white', 'selected');
            
            // Animasi selection yang dramatic
            gsap.timeline()
                .to(button, {
                    scale: 1.25,
                    rotation: 8,
                    boxShadow: "0 0 0 3px rgba(236, 72, 153, 0.5), 0 20px 50px rgba(236, 72, 153, 0.6)",
                    duration: 0.15,
                    ease: "back.out(4)"
                })
                .to(button, {
                    scale: 1.15,
                    rotation: 0,
                    duration: 0.25,
                    ease: "elastic.out(1, 0.6)"
                })
                .add(() => {
                    createRingPulse(button);
                    createEnhancedConfetti(button);
                    createScreenFlash();
                }, 0.1);
            
            // Update selected display dengan typing effect
            animateNumberChange(selectedNumber, button.dataset.date);
            
            gsap.to("#selectedDate", {
                opacity: 1,
                y: 0,
                scale: 1.05,
                duration: 0.6,
                ease: "back.out(1.7)",
                onComplete: () => {
                    gsap.to("#selectedDate", {
                        scale: 1,
                        duration: 0.3
                    });
                }
            });
        }
        
        // Event listeners untuk click dan touch
        dateBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            selectDate(this);
        });
        
        dateBtn.addEventListener('touchstart', function(e) {
            e.preventDefault();
            e.stopPropagation();
        });
        
        dateBtn.addEventListener('touchend', function(e) {
            e.preventDefault();
            e.stopPropagation();
            selectDate(this);
        });
        
        dateBtn.addEventListener('touchmove', function(e) {
            e.preventDefault();
        });
        
        dateGrid.appendChild(dateBtn);
        
        // Animasi staggered untuk loading
        gsap.fromTo(dateBtn,
            { opacity: 0, scale: 0, y: 20 },
            { 
                opacity: 1, 
                scale: 1, 
                y: 0,
                duration: 0.6, 
                ease: "back.out(1.7)", 
                delay: 0.5 + (i * 0.02)
            }
        );
    }
    
    // Confirm button
    confirmBtn.addEventListener('click', function() {
        if (!currentSelected) return;
        
        const selectedDateValue = currentSelected.dataset.date;
        
        // Save to session/localStorage
        localStorage.setItem('birthdayDate', selectedDateValue);
        
        // Send to server
        fetch("{{ route('save.birthday') }}", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({
                date: selectedDateValue
            })
        }).then(() => {
            // Transition animation
            gsap.to("#calendarGrid, #header, #selectedDate", {
                opacity: 0,
                scale: 0.8,
                duration: 0.8,
                ease: "back.in(1.7)",
                onComplete: () => {
                    window.location.href = "{{ route('main.menu') }}";
                }
            });
        });
    });

    // Enhanced confetti function
    function createEnhancedConfetti(element) {
        const colors = ['#ec4899', '#8b5cf6', '#06b6d4', '#10b981', '#f59e0b', '#ef4444'];
        const shapes = ['‚óè', '‚òÖ', '‚ô¶', '‚ô•', '‚ô†', '‚ô£'];
        
        for (let i = 0; i < 20; i++) {
            const confetti = document.createElement('div');
            confetti.innerHTML = shapes[Math.floor(Math.random() * shapes.length)];
            confetti.className = 'absolute text-lg pointer-events-none font-bold';
            confetti.style.color = colors[Math.floor(Math.random() * colors.length)];
            confetti.style.left = '50%';
            confetti.style.top = '50%';
            confetti.style.zIndex = '100';
            element.appendChild(confetti);
            
            gsap.to(confetti, {
                x: (Math.random() - 0.5) * 200,
                y: (Math.random() - 0.5) * 200,
                scale: 0,
                rotation: Math.random() * 720,
                duration: Math.random() * 1.5 + 1,
                ease: "power2.out",
                onComplete: () => confetti.remove()
            });
        }
    }
    
    // Ring pulse effect
    function createRingPulse(element) {
        for (let i = 0; i < 3; i++) {
            const ring = document.createElement('div');
            ring.className = 'absolute inset-0 border-4 border-pink-400 rounded-2xl pointer-events-none';
            ring.style.zIndex = '50';
            element.appendChild(ring);
            
            gsap.fromTo(ring, 
                { 
                    scale: 1, 
                    opacity: 0.8,
                    borderWidth: '4px'
                },
                {
                    scale: 2.5,
                    opacity: 0,
                    borderWidth: '1px',
                    duration: 0.8,
                    delay: i * 0.1,
                    ease: "power2.out",
                    onComplete: () => ring.remove()
                }
            );
        }
    }
    
    // Screen flash effect
    function createScreenFlash() {
        const flash = document.createElement('div');
        flash.className = 'fixed inset-0 bg-white pointer-events-none';
        flash.style.zIndex = '9999';
        document.body.appendChild(flash);
        
        gsap.fromTo(flash,
            { opacity: 0 },
            { 
                opacity: 0.3,
                duration: 0.1,
                yoyo: true,
                repeat: 1,
                onComplete: () => flash.remove()
            }
        );
    }
    
    // Animated number change
    function animateNumberChange(element, newNumber) {
        element.textContent = '';
        
        const chars = newNumber.toString().split('');
        chars.forEach((char, index) => {
            setTimeout(() => {
                element.textContent += char;
                gsap.fromTo(element, 
                    { scale: 1.2 },
                    { scale: 1, duration: 0.2, ease: "back.out(2)" }
                );
            }, index * 150);
        });
    }
    
    // Particle trail untuk mouse movement
    function createParticleTrail(x, y) {
        const particle = document.createElement('div');
        particle.className = 'fixed w-2 h-2 bg-gradient-to-r from-pink-400 to-purple-400 rounded-full pointer-events-none';
        particle.style.left = x + 'px';
        particle.style.top = y + 'px';
        particle.style.zIndex = '60';
        document.body.appendChild(particle);
        
        gsap.to(particle, {
            scale: 0,
            opacity: 0,
            duration: 1,
            ease: "power2.out",
            onComplete: () => particle.remove()
        });
    }
    
    // Mouse trail pada grid area
    let trailTimer;
    dateGrid.addEventListener('mousemove', function(e) {
        clearTimeout(trailTimer);
        trailTimer = setTimeout(() => {
            if (Math.random() < 0.3) {
                createParticleTrail(e.clientX, e.clientY);
            }
        }, 50);
    });
});
</script>

<style>
/* Enhanced styling untuk button tanggal */
.date-button {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
}

.date-button:hover {
    transform: translateY(-4px) scale(1.05);
}

.date-button:active {
    transform: translateY(-2px) scale(1.02);
}

/* STYLING UNTUK BUTTON YANG TERPILIH */
.date-button.selected {
    background: linear-gradient(135deg, #ec4899, #f43f5e) !important;
    color: white !important;
    box-shadow: 0 0 0 3px rgba(236, 72, 153, 0.5), 0 20px 50px rgba(236, 72, 153, 0.6) !important;
    border-color: #ec4899 !important;
    transform: scale(1.15) !important;
}

/* Pastikan selected button tetap terlihat saat hover */
.date-button.selected:hover {
    background: linear-gradient(135deg, #ec4899, #f43f5e) !important;
    color: white !important;
    transform: scale(1.18) !important;
}

/* Pulse animation untuk selected button */
.date-button.selected::before {
    content: '';
    position: absolute;
    inset: -3px;
    border: 3px solid #ec4899;
    border-radius: inherit;
    animation: pulse-border 1.5s infinite;
    z-index: -1;
}

@keyframes pulse-border {
    0% {
        transform: scale(1);
        opacity: 0.8;
        border-color: #ec4899;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.4;
        border-color: #8b5cf6;
    }
    100% {
        transform: scale(1.1);
        opacity: 0;
        border-color: #06b6d4;
    }
}

/* Sparkle animation */
@keyframes sparkle {
    0%, 100% {
        opacity: 0;
        transform: scale(0) rotate(0deg);
    }
    50% {
        opacity: 1;
        transform: scale(1) rotate(180deg);
    }
}

/* Hover glow effect */
.date-button:not(.selected):hover::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: linear-gradient(45deg, rgba(236, 72, 153, 0.1), rgba(139, 92, 246, 0.1));
    z-index: -1;
}

/* Mobile touch feedback */
@media (hover: none) and (pointer: coarse) {
    .date-button:not(.selected):active {
        background: linear-gradient(135deg, #ec4899, #8b5cf6);
        color: white;
        transform: scale(0.95);
    }
}

/* Enhanced grid responsiveness */
#dateGrid {
    gap: 1rem;
}

@media (max-width: 640px) {
    #dateGrid {
        grid-template-columns: repeat(5, 1fr);
        gap: 0.75rem;
    }
    
    .date-button {
        height: 3.5rem;
        font-size: 1.125rem;
    }
}

@media (max-width: 480px) {
    #dateGrid {
        grid-template-columns: repeat(4, 1fr);
        gap: 0.5rem;
    }
    
    .date-button {
        height: 3rem;
        font-size: 1rem;
    }
}

/* Smooth transitions untuk semua states */
.date-button * {
    transition: all 0.3s ease;
}

/* Override untuk memastikan tidak ada interference dari CSS lain */
.date-button {
    opacity: 1 !important;
}

.date-button:not(.selected) {
    transform: scale(1) !important;
}
</style>
@endsection